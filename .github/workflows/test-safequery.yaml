name: Tests safequery
on:
  push:
    branches:
      - master
      - main
      - "release/*"
  pull_request:


jobs:
  test:
    name: "safequery test"
    runs-on: 'ubuntu-20.04'
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - uses: actions/setup-go@v3
      with:
        check-latest: true
        cache: true
        go-version: '1.19.x'
        cache-dependency-path: "/go.sum"
    - run: go version
    - run: go mod download # Not required, used to segregate module download vs test times
    - run: make test
  linters:
    name: "safequery linters"
    runs-on: 'ubuntu-20.04'
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - uses: actions/setup-go@v3
      with:
        check-latest: true
        cache: true
        go-version: '1.19.x'
        cache-dependency-path: "/go.sum"
    - run: go version
    - run: go mod download # Not required, used to segregate module download vs test times
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: v1.50.0

  generate:
    name: Correctly generated files
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v3
        with:
          check-latest: true
          cache: true
          go-version: '1.19.x'
          cache-dependency-path: "/go.sum"
      - run: go mod tidy
      - run: git diff --exit-code go.mod
      - name: Error message
        if: ${{ failure() }}
        run: echo '::error file=go.mod,line=1,col=1::Inconsistent go mod file. Ensure you have run `go mod tidy` and committed the files locally.'; echo '::error file=enterprise_mod.go,line=1,col=1::Possible missing enterprise exclusive dependencies.'

      - run: make fmt
      - run: git diff --exit-code
      - name: Error message
        if: ${{ failure() }}
        run: echo 'Not formatted files. Ensure you have run `make fmt` and committed the files locally.'

      # - run: make mocks
      # - run: git diff --exit-code
      # - name: Error message
